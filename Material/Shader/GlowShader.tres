[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=2]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
output_port_for_preview = 0
function = 12

[sub_resource type="VisualShaderNodeColorConstant" id=4]
constant = Color( 1, 0, 0, 1 )

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Color:8
	vec3 n_out8p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out8p1 = 1.000000;

// Input:2
	float n_out2p0 = TIME;

// ScalarFunc:4
	float n_out4p0 = sin(n_out2p0);

// ScalarFunc:7
	float n_out7p0 = abs(n_out4p0);

// Output:0
	ALBEDO = n_out8p0;
	ALPHA = n_out7p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -4.7489, 168.518 )
nodes/fragment/0/position = Vector2( 740, 160 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -440, 400 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( -220, 400 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( 20, 400 )
nodes/fragment/8/node = SubResource( 4 )
nodes/fragment/8/position = Vector2( 140, 180 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 7, 0, 7, 0, 0, 1, 8, 0, 0, 0 )
